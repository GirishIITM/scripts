#!/bin/bash

# ubg - universal background wallpaper changer
# changes background as well as lockscreen picture to provided image
# dont use if you want different images as bg and lockscreen.

# works with bgclock or feh and betterlockscreen

# usage: ubg [image] [delta]

# if you feel the accent color generated is too similar or too dissimilar to
# dominant color of image, then pass 2nd argument delta. higher delta = more difference
# default value of delta = 50

# if no image is provided, then it will use the image in $WALLPAPER_DIR/wall

error(){
	echo "$@" >&2
	exit 1
}
src="$1"

source "${XDG_CONFIG_HOME:-$HOME/.config}/wall.conf"

if [[ -z "$WALLPAPER_DIR" ]]; then
  path="${HOME}/.config/wall"
else
  path="$WALLPAPER_DIR"
fi


if test -z "$1"; then
  if test -f "${path}/wall"; then
    src="${path}/wall"
    echo "No image provided, reconfiguring current theme"
  else
    error "No image provided, and no image found in $path/wall"
  fi
fi
if test ! -r "$src" ; then error "File $src does not exist or is unreadable"; fi
if test -d "$src"; then error "$src is a directory, not an image" ; fi
if ! isimage "$src"; then error "$src is not a valid image file" ; fi

delta="$2"
if test -z "$2"; then delta=50; fi
src="$(realpath "$src")"

if ! mkdir -p "$path"; then echo "unable to create directory"; exit 1; fi
if [[ "$src" != $(realpath "$path/$(basename "$src")") ]]; then
  cp -f "$src" "${path}/"
fi
cd "$path" || exit 1
src="$(basename "$src")"
rm wall || exit 1
# set background to be read by bgclock
ln -s "$src" wall || exit 1
echo "background symlink set"
read -r -n1 -p "set background? [Y/n] " ch
echo
if test "$ch" != "n"; then
  feh --bg-fill "$src" || exit 1
  echo "background set"
fi

read -r -n1 -p "set lockscreen? [Y/n] " ch
echo
if test "$ch" != "n"; then
  echo "setting lockscreen"
  # set lockscreen to be used by betterlockscreen, this takes a while
  betterlockscreen -u "$src" || exit 1
  echo "lockscreen set"
fi

while true; do
  # get dominant color of picture
  dc="$(domcol "$src")"
  # get if image color is light or dark
  contrast="$(lord "$dc")"
  # if image is dark, make accent lighter. if image is light, make accent darker
  case "$contrast" in
    "light") tone=-${delta} ;;
    "dark") tone=${delta} ;;
  esac
  # get accent color
  accentcolor="$(hexcolortoner "$dc" "$tone")"
  # get accentcolor contrast (light or dark)
  contrast="$(lord "$accentcolor")"

  # if accentcolor is light, make text black, else make text white
  case "$contrast" in
    "light") textcolor="#111111";;
    "dark") textcolor="#eeeeee";;
  esac

  echo "dominantcolor= $dc"
  echo "accentcolor= $accentcolor"
  echo "textcolor= $textcolor"

  # write the theme to .theme file in ~/.config/wall
  printf "dwm.selfgcolor:\t%s\ndwm.selbordercolor:\t%s\ndwm.selbgcolor:\t%s\n" \
    "$textcolor" "$accentcolor" "$accentcolor" > .theme
  echo "theme written to $path"

  read -r -n1 -p "regenerate colors? [Y/n] " ch
  echo

  if test "$ch" != "y"; then
    break
  fi
done

read -r -n1 -p "write to xresources? [Y/n] " ch
echo

if test "$ch" != "n"; then
  echo "writing to xresources"
  xrdb -merge .theme
  xrdb -edit "${HOME}/.Xresources"
  echo "theme applied and written to .Xresources. Restart dwm to reflect changes"
fi

read -r -n1 -p "restart dwm? [Y/n] " ch
echo
if test "$ch" != "n"; then
  restartdwm
fi
